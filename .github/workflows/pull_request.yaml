name: pre-and-post-merge

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  GO_VERSION: "1.15"

jobs:
  test-unit:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v2
      with:
        go-version: ^${{ env.GO_VERSION }}
    - uses: actions/checkout@v2
      name: Check out code into the Go module directory
    - name: Unit Tests
      run: make test
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: cover-unit.out
        flags: unit-tests
        name: codecov-unit-test

  test-integration-containerd:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v2
      with:
        go-version: ^${{ env.GO_VERSION }}
    - uses: actions/checkout@v2
      name: Check out code into the Go module directory
    - name: Setup containerd cluster
      run: |
        set -x
        sudo apt-get install -y kubeadm kubelet
        sudo swapoff -a
        # Ensure dockerd isn't running
        sudo systemctl stop docker.socket
        sudo systemctl stop docker
        sudo rm -f /var/run/docker.sock
        sudo kubeadm init --cri-socket /run/containerd/containerd.sock
        mkdir -p $HOME/.kube/
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $USER $HOME/.kube/config
        kubectl taint nodes --all node-role.kubernetes.io/master-
        kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
        kubectl wait --for=condition=ready --timeout=30s node --all
        kubectl get nodes -o wide
    - name: Run integration tests
      run: make integration EXTRA_GO_TEST_FLAGS=-v
    - name: Gather integration coverage results
      uses: codecov/codecov-action@v1
      with:
        file: cover-int.out
        flags: integration-tests
        name: codecov-integration-test-containerd

  test-integration-dockerd:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v2
      with:
        go-version: ^${{ env.GO_VERSION }}
    - uses: actions/checkout@v2
      name: Check out code into the Go module directory
    - name: Setup kubeadm cluster with default docker runtime
      run: |
        set -x
        sudo apt-get install -y kubeadm kubelet
        sudo swapoff -a
        sudo kubeadm init
        mkdir -p $HOME/.kube/
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $USER $HOME/.kube/config
        kubectl taint nodes --all node-role.kubernetes.io/master-
        kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
        kubectl wait --for=condition=ready --timeout=30s node --all
        kubectl get nodes -o wide
        docker version

    - name: Run integration tests
      run: make integration EXTRA_GO_TEST_FLAGS=-v
    - name: Gather integration coverage results
      uses: codecov/codecov-action@v1
      with:
        file: cover-int.out
        flags: integration-tests
        name: codecov-integration-test-dockerd

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v2
      with:
        go-version: ^${{ env.GO_VERSION }}
    - name: Check-out code
      uses: actions/checkout@v2
    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v2
      with:
        go-version: ^${{ env.GO_VERSION }}
    - uses: actions/checkout@v2
      name: Check out code into the Go module directory
    - name: Build
      run: make dist
    - uses: actions/upload-artifact@v2
      with:
        name: darwin.tgz
        path: bin/darwin.tgz
    - uses: actions/upload-artifact@v2
      with:
        name: linux.tgz
        path: bin/linux.tgz
    - uses: actions/upload-artifact@v2
      with:
        name: windows.tgz
        path: bin/windows.tgz
